import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { AlloraInferenceResponse } from "@repo/de-agent";
import { formatDistanceToNow } from "date-fns";

interface AlloraPriceInferenceSuccessProps {
  data: AlloraInferenceResponse;
}

function formatTimestamp(timestamp: number): string {
  const date = new Date(timestamp * 1000);
  return `${date.toLocaleString()} (${formatDistanceToNow(date, { addSuffix: true })})`;
}

export function AlloraPriceInferenceSuccess({
  data,
}: AlloraPriceInferenceSuccessProps) {
  console.log("AlloraPriceInferenceSuccess", data);

  if (!data || !data.inference_data) {
    return (
      <Card className="w-full">
        <CardHeader>
          <CardTitle>Allora Price Inference</CardTitle>
          <CardDescription>No price inference data available</CardDescription>
        </CardHeader>
      </Card>
    );
  }

  const inferenceData = data.inference_data;
  const tokenDecimals = data.token_decimals || 18;
  const topicId = inferenceData.topic_id || "Unknown";

  // Extract the normalized value for display
  const normalizedValue =
    inferenceData.network_inference_normalized ||
    inferenceData.network_inference;

  // Parse the price value
  const predictedPrice =
    typeof normalizedValue === "number"
      ? normalizedValue
      : parseFloat(normalizedValue.toString());

  // Format the price with commas and appropriate decimal places
  const formattedPrice = predictedPrice.toLocaleString(undefined, {
    minimumFractionDigits: 2,
    maximumFractionDigits: predictedPrice < 1 ? 6 : 2,
  });

  // Determine token symbol based on topic ID
  let tokenSymbol = "BTC"; // Default
  if (topicId === "18") tokenSymbol = "BTC";
  if (topicId === "19") tokenSymbol = "ETH";
  if (topicId === "20") tokenSymbol = "SOL";

  // Get token name based on symbol
  let tokenName = tokenSymbol;
  if (tokenSymbol === "BTC") {
    tokenName = "Bitcoin";
  } else if (tokenSymbol === "ETH") {
    tokenName = "Ethereum";
  } else if (tokenSymbol === "SOL") {
    tokenName = "Solana";
  } else if (tokenSymbol === "BNB") {
    tokenName = "Binance Coin";
  } else if (tokenSymbol === "ARB") {
    tokenName = "Arbitrum";
  } else if (tokenSymbol === "SUI") {
    tokenName = "Sui";
  }

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>Allora Price Inference</CardTitle>
        <CardDescription>
          Predicted price for {tokenName} ({tokenSymbol})
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        <div className="flex flex-col items-center justify-center p-6 bg-muted rounded-lg">
          <div className="text-sm text-muted-foreground mb-2">
            Predicted Price
          </div>
          <div className="flex items-center">
            <span className="text-3xl font-bold">${formattedPrice}</span>
          </div>
          <div className="text-xs text-muted-foreground mt-2">
            Raw: {inferenceData.network_inference}
          </div>
          <div className="text-xs text-muted-foreground">
            Token Decimals: {tokenDecimals}
          </div>
          <div className="text-xs text-muted-foreground">
            Updated: {formatTimestamp(inferenceData.timestamp)}
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="p-4 border rounded-lg">
            <h3 className="text-sm font-medium text-muted-foreground mb-1">
              Asset
            </h3>
            <p className="font-medium">
              {tokenName} ({tokenSymbol})
            </p>
          </div>
          <div className="p-4 border rounded-lg">
            <h3 className="text-sm font-medium text-muted-foreground mb-1">
              Topic ID
            </h3>
            <p className="font-medium">{topicId}</p>
          </div>
        </div>

        {data.signature && (
          <div className="space-y-2">
            <h3 className="text-sm font-medium text-muted-foreground">
              Signature
            </h3>
            <div className="bg-muted p-2 rounded text-xs font-mono overflow-x-auto">
              {data.signature}
            </div>
          </div>
        )}

        <div className="text-sm text-muted-foreground">
          <p>
            This prediction is generated by the Allora Oracle Network based on
            aggregated data from multiple sources.
          </p>
        </div>
      </CardContent>
    </Card>
  );
}
